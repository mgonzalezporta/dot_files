######################################################################
### GENERAL
######################################################################

# To make ctrl-arrow, etc. work
set-window-option -g xterm-keys on

# Enable mouse clicking
set-option -g mouse on

# Reload configuration
bind r source-file ~/.tmux.conf \; display '~/.tmux.conf sourced'

######################################################################
### NAVIGATION
######################################################################

# Sessions
bind-key -n C-s new-session
bind s command-prompt 'rename-session %%'
bind k command-prompt 'kill-session -t %%'
#bind-key -n C-q command-prompt 'kill-session -t %%'
#bind-key -n C-s command-prompt 'rename-session %%'
bind-key -n C-f command-prompt -p find-session 'switch-client -t %%'

# Windows (tabs)
bind-key -n C-w new-window
bind w command-prompt 'rename-window %%'
# bind-key -n C-w command-prompt 'rename-window %%'
bind-key -n C-Left  select-window -t :-
bind-key -n C-Right select-window -t :+
bind-key -n C-S-Left swap-window -t -1\; select-window -t -1
bind-key -n C-S-Right swap-window -t +1\; select-window -t +1

# Splits
bind-key -n C-p split-window -h -c '#{pane_current_path}'
bind-key -n C-o split-window -v -c '#{pane_current_path}'
bind-key -n C-z resize-pane -Z \; display-message 'zoomed'
#bind v split-window -h -c '#{pane_current_path}'
#bind h split-window -v -c '#{pane_current_path}'

# Smart pane switching with awareness of Vim splits
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"
bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

######################################################################
### UI
######################################################################

# Customise right panel
set -g status-left-length 30
set -g status-right '%d-%b-%Y %H:%M (#H)'

# Enable colors
set -g default-terminal 'xterm-256color'
set -ga terminal-overrides ",*256col*:Tc"

## COLOUR
## Adapted from seebi/tmux-colors-solarized
#
## default statusbar colors
#set-option -g status-style fg="#edb443",bg=default #yellow
#
## default window title colors
#set-window-option -g window-status-style fg=colour244,bg=default #base0 and default
#
## active window title colors
#set-window-option -g window-status-current-style fg="#d26937",bg=default #orange
#
## pane border
#set-option -g pane-border-style fg=colour235 #base02
#set-option -g pane-active-border-style fg=colour240 #base01
#
## message text
#set-option -g message-style fg="#d26937",bg=colour235 #orange and base02
#
## pane number display
#set-option -g display-panes-active-colour colour33 #blue
#set-option -g display-panes-colour "#d26937" #orange
#
## clock
#set-window-option -g clock-mode-colour colour64 #green
#
## bell
#set-window-option -g window-status-bell-style fg=colour235,bg=colour160 #base02, red
