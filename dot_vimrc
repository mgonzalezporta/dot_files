""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Plugins
""""""""""""""""""""""""""""""""""""""""""""""""""""""
call plug#begin()
" Plug 'ctrlpvim/ctrlp.vim'
Plug 'junegunn/fzf', { 'do': './install --bin' }
Plug 'junegunn/fzf.vim'
Plug 'lifepillar/vim-solarized8'
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
"Plug 'itchyny/lightline.vim'
Plug 'preservim/nerdcommenter'
Plug 'airblade/vim-gitgutter'
Plug 'whatyouhide/vim-gotham'
Plug 'dikiaap/minimalist'
Plug 'jiangmiao/auto-pairs'
"Plug 'davidhalter/jedi-vim'
Plug 'scrooloose/nerdtree'
Plug 'neomake/neomake'
Plug 'machakann/vim-highlightedyank'
Plug 'tmhedberg/SimpylFold'
Plug 'tpope/vim-fugitive'
call plug#end()

""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Plugin configuration
""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Code checking with neomake
let g:neomake_python_enabled_makers = ['pylint']
call neomake#configure#automake('nrwi', 500)
" nerdtree
let NERDTreeIgnore = ['\.pyc$', '^__pycache__$']
autocmd StdinReadPre * let s:std_in=1
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif
" fzf
let g:fzf_nvim_statusline = 0 " disable statusline overwriting
"let g:fzf_action = { 'return': 'tab split' }
" vim-gutter
set updatetime=100
" " ctrlp: open new and existing files in a new tab
" let g:ctrlp_open_new_file = 't'
" let g:ctrlp_prompt_mappings = {
"     \ 'AcceptSelection("e")': ['<2-LeftMouse>'],
"     \ 'AcceptSelection("t")': ['<cr>'],
"     \ }
" SimplyFold: default to unfolded
autocmd FileType python setlocal foldenable foldlevel=20

""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Key mappings
""""""""""""""""""""""""""""""""""""""""""""""""""""""
let mapleader=","
nmap <leader>nf :NERDTreeFind<CR>
nmap <leader>nt :NERDTreeToggle<CR>
nnoremap <silent> <leader>f :Files<CR>
nnoremap <silent> <leader>b :Buffers<CR>
nnoremap <silent> <leader>w :Windows<CR>
nnoremap <C-h> :tabprevious<CR>
nnoremap <C-l> :tabnext<CR>

""""""""""""""""""""""""""""""""""""""""""""""""""""""
" UI and syntax
"""""""""""""""""""""""""""""""""""""""""""""""""""""
" Colors
set termguicolors
set background=dark
set t_Co=256
" Theme
colorscheme gotham256
let g:airline_theme='gotham256'
" let g:lightline = { 'colorscheme': 'gotham' }
" Cursor line
set cursorline
hi CursorLine guibg=Grey10
" Line numbers
set number
" Enable mouse support
set mouse=a
" Wild menu
set wildmenu
set wildchar=<TAB>
set wildignore+=*.DS_STORE,*.db
" Encoding
set encoding=utf-8
" Syntax
syntax on
" Nextflow syntax highlighting
au BufNewFile,BufRead *.nf set filetype=groovy
" Indentation, spaces and tabs
filetype indent on
set tabstop=4
set softtabstop=4
set expandtab
set list
set listchars=tab:â€º\ ,trail:.,extends:#,nbsp:.
set wrap
set backspace=indent,eol,start
" Do not comment new lines automatically
autocmd BufNewFile,BufRead,FileType,OptionSet * set formatoptions-=cro
autocmd BufNewFile,BufRead,FileType,OptionSet * setlocal formatoptions-=cro
" Search
set ignorecase
set hlsearch
set incsearch
" Misc
set showmatch
set showmode
set showcmd
" " Use the clipboard register for yank, delete and put
" noremap y "+y
" vnoremap y "+y
" noremap yy "+yy
" vnoremap yy "+yy
" noremap d "+d
" vnoremap d "+d
" noremap dd "+dd
" vnoremap dd "+dd
" noremap p "+p
" vnoremap p "+p

""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Misc
""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Spelling
nnoremap <leader>s :set spell!<CR>
